{"version":3,"sources":["components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","redux/contacts/contacts-action.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","filterName","props","contacts","find","contact","toLowerCase","alert","reset","onAddContact","this","onSubmit","form","label","title","input","type","onChange","pattern","required","button","Component","connect","items","dispatch","actions","filter","target","onDeleteContact","contactId","item","onClick","getVisibleContacts","allContacts","normilizedFilter","includes","list","map","App","titlePhonebbok","titleContacts","createReducer","data","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.6eebc8e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3p0UT\",\"title\":\"Filter_title__2fZsj\",\"input\":\"Filter_input__3NTu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhonebbok\":\"App_titlePhonebbok__2UeSv\",\"titleContacts\":\"App_titleContacts__1LiGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__38xU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1GE1u\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","//with Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('app/addContact', ({name,number}) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number\r\n    }   \r\n}))\r\n\r\nexport const deleteContact = createAction('app/deleteContact');\r\nexport const changeFilter = createAction('app/changeFilter');\r\n\r\n    \r\n\r\n\r\n//without Redux Toolkit\r\n// import actionTypes from './contacts-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// export const addContact = ({name,number}) => ({\r\n//     type: actionTypes.ADD_CONTACT,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number\r\n//     }\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//     type: actionTypes.DELETE_CONTACT,\r\n//     payload: contactId\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//     type: actionTypes.CHANGE_FILTER,\r\n//     payload: value\r\n// });\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        const filterName = this.state.name;\r\n    \r\n        if (this.props.contacts.find(contact => contact.name.toLowerCase() === filterName.toLowerCase())) {\r\n            alert(`${filterName} is already in contacts`);\r\n            this.reset();\r\n            return;\r\n        }\r\n        \r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        \r\n        return (\r\n            \r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        <span className={s.title}>Name</span>\r\n                        <input\r\n                            className={s.input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        <span className={s.title}>Number</span>\r\n                        <input\r\n                            className={s.input}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contacts.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   \r\n  return {\r\n    onAddContact: ({name, number}) => dispatch(actions.addContact({name, number})),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>\r\n        <span className={s.title}>Find contacts by name</span>\r\n        <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      value: state.contacts.filter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(actions.changeFilter(e.target.value)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange:PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({contacts, onDeleteContact }) => (\r\n    <div className={s.item}>\r\n        <p className={s.contact}>\r\n            <span className={s.name}>{contacts.name}:\r\n            </span>\r\n            <span className={s.number}>{contacts.number}\r\n            </span>\r\n        </p>\r\n        <button className={s.button} onClick={()=> onDeleteContact(contacts.id)}>Delete</button>\r\n    </div> \r\n)\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n    onDeleteContact:PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({contacts}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map((contacts)=> (\r\n            <li key={contacts.id}  >\r\n                <ContactListItem contacts={contacts}/>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\n const getVisibleContacts = (allContacts, filter) => {\r\n    const normilizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normilizedFilter));\r\n  }\r\n\r\nconst mapStateToProps = ({contacts:{items, filter}}) => {\r\n    return {\r\n        contacts: getVisibleContacts(items, filter)\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\n ","import React from 'react';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nexport default function App () {\n    return (\n      <Container>\n        <div>\n          <h1 className={s.titlePhonebbok}>Phonebook</h1>\n          <ContactForm />\n          <h2 className={s.titleContacts}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </Container>\n    );\n  \n}\n\n\n","//with Redux Toolkit\r\nimport { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport data from '../../../src/data/contacts.json';\r\nimport {addContact, deleteContact, changeFilter} from './contacts-action'\r\n\r\nconst items = createReducer(data, {\r\n    [addContact]: (state, {payload}) => [payload, ...state],\r\n    [deleteContact]: (state, {payload}) =>\r\n        state.filter(({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n   [changeFilter]:(_, {payload}) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});\r\n\r\n\r\n//without Redux Toolkit\r\n// import { combineReducers } from 'redux';\r\n// import data from '../../../src/data/contacts.json';\r\n// import types from './contacts-types'\r\n\r\n// const items = (state = data, {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD_CONTACT:\r\n//             return [payload, ...state];\r\n//         case types.DELETE_CONTACT:\r\n//             return state.filter(({id}) => id !== payload)\r\n            \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//      switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;  \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter\r\n// });","//with Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n//for watching prevState, action, nextState in console\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    logger]\r\n\r\n//localStorage\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer, \r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n//обертка над store, которая реализует обновление LocalStorage\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n//without Redux Toolkit\r\n//import { combineReducers } from \"redux\";\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer\r\n// })\r\n\r\n//const store = createStore(rootReducer, composeWithDevTools());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1-LHK\",\"label\":\"ContactForm_label__1vWKc\",\"title\":\"ContactForm_title__3rZJK\",\"input\":\"ContactForm_input__2BnBV\",\"button\":\"ContactForm_button__2BBQd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3dY8Q\",\"contact\":\"ContactListItem_contact__3JQha\",\"name\":\"ContactListItem_name__1LK1E\",\"number\":\"ContactListItem_number__HvrNw\",\"button\":\"ContactListItem_button__2ZUCm\"};"],"sourceRoot":""}